module languages/Java-1.5/interfaces/trans/desugar

imports

  signatures/-
  languages/Java-1.5/classes/trans/desugar

signature // Interface

  constructors

    InterfaceDec : Access * List(InterfaceMod) * Id * TypeParams * ExtendsInterfaces * List(InterfaceMemberDec) -> InterfaceDec
    ExtendsInterfaces : Id * InterfaceType -> ExtendsInterfaces

rules

  desugar:
    InterfaceDec(InterfaceDecHead(modifier*, name, type-parameter*, extends), body) ->
    InterfaceDec(access, modifier'*, name, type-parameter*, extends', body)
    with
      access     := <desugar-pick-access-modifier> modifier*
    ; modifier'* := <remove-all(?access)> modifier*
    ; extends'   := <desugar-extends(|name)> extends

  desugar-extends(|i):
    ExtendsInterfaces(interface-type*) -> <map(\it -> ExtendsInterfaces(i, it)\)> interface-type*

  desugar-extends(|i):
    None() -> []

signature // Fields (constants)

  constructors

    ConstantDec : Type * VarDec -> ConstantDec

rules

  desugar:
    ConstantDec(_, type, vardec*) -> <map(desugar-constantdec(|type))> vardec*

  desugar-constantdec(|type):
    var-dec -> ConstantDec(type, var-dec)

rules // Methods (abstract)

  desguar:
    _ -> AbstractMethodDec(modifier*, type-param*, type, name, param*, throws)
    where
      ?AbstractMethodDec(modifier*, type-param*, type, name, param*, throws)
    + ?DeprAbstractMethodDec(modifier*, type-param*, type, name, param*, _, throws)

rules // Annotations

  desugar:
    Anno(t, pair*) -> <map(desugar-anno(|t))> pair*

  desugar-anno(|t):
    pair -> Anno(t, pair)
