module languages/Java-1.5/packages/trans/desugar

imports

  signatures/-
  runtime/editor/origins
  desugar
  varids

signature

  constructors

    CompilationUnit    : ID * List(ImportDec) * Package -> CompilationUnit
    DefaultPackageDec  : ID * Package -> PackageDec
    PackageDec         : ID * Package -> PackageDec
    PackageDec         : List(Anno) * ID * List(TypeDec) -> PackageDec
    DefaultPackageName : ID -> PackageName
    PackageName        : ID -> PackageName
    PackageName        : ID * PackageName -> PackageName
    Default            : Default

rules

  desugar-top:
    f@Files(file*) -> <origin-track-forced(!files)> f
    with
      file'* := <map(desugar-top)> file*;
      files  := File(file'*)

  desugar-top:
    f@File(CompilationUnit(package-dec, import-dec*, type-dec*)) -> <origin-track-forced(!file); desugar-all-singleton-appl; desugar-all; add-all-varids> f
    with // Force origins because CompilationUnit is the root term, otherwise its origin will be lost.
      import-dec'* := <map(try(desugar-import); topdown(try(desugar-package-ref))); add-java-lang-import> import-dec*;
      package-dec' := <desugar-package-dec(|type-dec*)> package-dec;
      cu           := CompilationUnit("current", import-dec'*, package-dec');
      file         := File(cu)

  desugar-package-dec(|type-decl*):
    None() -> DefaultPackageDec(Default(), type-decl*)

  desugar-package-dec(|type-decl*):
    Some(PackageDec(anno*, PackageName(name*))) -> DefaultPackageDec(Default(), <package-dec-nest(|type-decl*, anno*)> name*)

  package-dec-nest(|type-decl*, anno*):
    [Id(pkg), p|s] -> PackageDec(pkg, <package-dec-nest(|type-decl*, anno*)> [p|s])

  package-dec-nest(|type-decl*, anno*):
    [Id(pkg)] -> PackageDec(anno*, pkg, type-decl*)


  desugar-import:
    TypeImportDec(TypeName(Id(name))) -> TypeImportDec(TypeName(DefaultPackageName(Default()), name))

  desugar-package-ref:
    PackageName(name*) -> <reverse; package-ref-nest> name*

  package-ref-nest:
    [Id(pkg), p|s] -> PackageName(<package-ref-nest> [p|s], pkg)

  package-ref-nest:
    [Id(pkg)] -> PackageName(pkg)

  java-lang-import = !TypeImportOnDemandDec(PackageName(PackageName("java"), "lang"))

  add-java-lang-import:
    import* -> import'*
    where
      jli := <java-lang-import>
    ; if <fetch(?jli)> import* then
        import'* := import*
      else
        import'* := [jli|import*]
      end

