%%%
 %% Section 8.4: Method Declarations
 %%%
module MethodDeclarations

imports

  Identifiers
  Modifiers
  FieldDeclarations
  Annotations
  Blocks
  Types
  TypeVariables
  ReferenceTypes

sorts

  MethodDec MethodDecHead ResultType

context-free syntax

  MethodDec.MethodDec = <<MethodDecHead> <MethodBody>>
  MethodParams.MethodParams = <<{FormalParam ","}*>>
  MethodDecHead.MethodDecHead = <<AnnoOrMethodMod*> <TypeParams?> <ResultType> <Id> ( <MethodParams> ) <Throws?>>
  MethodDecHead.DeprMethodDecHead = <<AnnoOrMethodMod*> <TypeParams?> <ResultType> <Id> ( <MethodParams> ) <Dim+> <Throws?>>
  AnnoOrMethodMod = Anno
  AnnoOrMethodMod = MethodMod
  ResultType = Type
  ResultType.Void = <void>

sorts

  FormalParam

context-free syntax

  FormalParam.Param = <<Alt3*> <Type> <VarDecId>>
  Alt3 = Anno
  Alt3 = VarMod
  FormalParam.VarArityParam = <<Alt4*> <Type> ... <VarDecId>>
  Alt4 = Anno
  Alt4 = VarMod

sorts

  VarMod

context-free syntax

  VarMod = Final

sorts

  MethodMod

context-free syntax

  MethodMod = Public
  MethodMod = Protected
  MethodMod = Private
  MethodMod = Abstract
  MethodMod = Static
  MethodMod = Final
  MethodMod = Synchronized
  MethodMod = Native
  MethodMod = StrictFP

sorts

  Throws ExceptionType

context-free syntax

  Throws.ThrowsDec = <throws <{ExceptionType ","}+>>
  ExceptionType = ClassType

sorts

  MethodBody

context-free syntax

  MethodBody = Block
  MethodBody.NoMethodBody = <;>
