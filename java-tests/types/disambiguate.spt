module types-disambiguate

language Java

start symbol File

setup [[
	interface IA {}
	class B implements IA {}
	class C extends B {}
]]

// TODO: does not work because disambiguation is not plugged into NaBL yet
test disambiguate arity [[
	class Test {
		void test() {
			[[m]](1);
		}
		
		void m() {}
		void [[m]](int i) {}
		void m(int i, float f) {}
	}
]] resolve #1 to #2

test wrong arity [[
	class Test {
		void test() {
			[[m(1)]];
		}
		
		void m() {}
	}
]] 1 error


// TODO: does not work because disambiguation is not plugged into NaBL yet
test disambiguate types 1 [[
	class Test {
		IA a;
		
		void test() {
			[[m]](a, a);
		}
		
		void [[m]](IA l, IA r) {}
		void m(B l, B r) {}
		void m(C l, C r) {}
	}
]] resolve #1 to #2

// TODO: does not work because disambiguation is not plugged into NaBL yet
test disambiguate types 2 [[
	class Test {
		B b;
		
		void test() {
			[[m]](b, b);
		}
		
		void m(IA l, IA r) {}
		void [[m]](B l, B r) {}
		void m(C l, C r) {}
	}
]] resolve #1 to #2

// TODO: does not work because disambiguation is not plugged into NaBL yet
test disambiguate types 3 [[
	class Test {
		C c;
		
		void test() {
			[[m]](c, c);
		}
		
		void m(IA l, IA r) {}
		void m(B l, B r) {}
		void [[m]](C l, C r) {}
	}
]] resolve #1 to #2

test type ambiguity [[
	class Test {
		B b;
		
		void test() {
			[[m(b, b)]];
		}
		
		void m(IA l, IA r) {}
		void m(IA l, B r) {}
		void m(B l, IA r) {}
	}
]] 1 error


// TODO: does not work because disambiguation is not plugged into NaBL yet
test disambiguate accessibility [[
	class Test {
		Disambiguate disamb = new Disambiguate();
		
		void m() {
			disamb.[[c]](new B(), new B());
		}
	}
	
	class Disambiguate {
		private void c(B l, B r) {}
		void [[c]](IA l, IA r) {}
	}
]] resolve #1 to #2
