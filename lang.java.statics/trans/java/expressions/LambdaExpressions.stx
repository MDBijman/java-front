module java/expressions/LambdaExpressions

imports

  signatures/java/expressions/LambdaExpressions-sig

  java/classes/MethodDeclarations
  java/expressions/Main
  java/names/Main
  java/statements/Blocks


rules // 15.27. Lambda Expressions

  exprOk(s, LambdaExpression(lambdaParams, expr)) = _ :-
  {s_lambda Ts}
    new s_lambda, s_lambda -LEX-> s,
    Ts == lambdaParamsOk(s, lambdaParams, s_lambda),
    _ == exprOk(s_lambda, expr),
    true.

  exprOk(s, LambdaExpressionWithBlock(lambdaParams, blk)) = _ :-
  {s_lambda Ts}
    new s_lambda, s_lambda -LEX-> s,
    Ts == lambdaParamsOk(s, lambdaParams, s_lambda),
    blkOk(s_lambda, blk),
    true.


  lambdaParamsOk : scope * LambdaParameters * scope -> list(TYPE)

  lambdaParamsOk(s, SingleInferredParam(id), s_def) = [_] :-
    true.

  lambdaParamsOk(s, Params(formalParams), s_def) = Ts :-
    Ts == formalParamsOk(s, formalParams, s_def),
    true.

  lambdaParamsOk(s, InferredParams(idList), s_def) = _ :-
    true.

