module java/expressions/AssignmentOperators

imports

  signatures/java/expressions/AssignmentOperators-sig

  java/expressions/Main
  java/expressions/ArrayAccess
  java/expressions/FieldAccess
  java/names/ExpressionNames


rules // 15.26. Assignment Operators

  exprOk(s, Assign(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignMul(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignDiv(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignMod(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignAdd(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignSub(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignLeftShift(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignRightShift(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignURightShift(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignAnd(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignXor(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).

  exprOk(s, AssignOr(lhs, expr)) = _ :-
    _ == lhsOk(s, lhs),
    _ == exprOk(s, expr).


  lhsOk : scope * LHS -> TYPE
  
  lhsOk(s, ExpressionName2LHS(exprName)) = _ :-
    exprNameOk(s, exprName) == _,
    true.
    
  lhsOk(s, FieldAccess2LHS(fldAccess)) = _ :-
    fldAccessOk(s, fldAccess),
    true.

  lhsOk(s, ArrayAccess2LHS(arrayAccess)) = _ :-
    arrayAccessOk(s, arrayAccess),
    true.


