module java/classes/MethodDeclarations

imports

  signatures/java/classes/MethodDeclarations-sig

  java/classes/Main
  java/classes/ClassDeclarations
  java/classes/FieldDeclarations
  java/interfaces/Annotations
  java/names/Main
  java/statements/Blocks
  java/types/ReferenceTypes


rules // 8.4. Method Declarations

  mthdDeclOk : scope * MethodDeclaration
  
  mthdDeclOk(s, MethodDecl(mthdModList, mthdHeader, mthdBody)) :-
  {s_mthd}
    mthdModListOk(s, mthdModList),

    new s_mthd, s_mthd -LEX-> s,

    mthdHeaderOk(s_mthd, mthdHeader),
    mthdBodyOk(s_mthd, mthdBody),
    true.


  mthdHeaderOk : scope * MethodHeader
  
  mthdHeaderOk(s, MethodHeader(result, id, formalParams, annDimsEmpty, throwsOpt)) :-
    resultOk(s, result),
    formalParamsOk(s, formalParams),
    annDimsEmptyOk(s, annDimsEmpty),
    throwsOptOk(s, throwsOpt),
    true.

  mthdHeaderOk(s, MethodHeaderTypeParameters(typeParams, annoList, result, id, formalParams, throwsOpt)) :-
    typeParamsOk(s, typeParams, _),
    annoListOk(s, annoList),
    resultOk(s, result),
    formalParamsOk(s, formalParams),
    throwsOptOk(s, throwsOpt),
    true.


  resultOk : scope * Result
  
  resultOk(s, UnannType2Result(unannType)) :-
    unannTypeOk(s, unannType),
    true.

  resultOk(s, Void()) :-
    true.


  throwsOk : scope * Throws
  throwsOptOk maps throwsOk(*, list(*))
  
  throwsOk(s, ThrowsDec(exceptTypeList)) :-
    exceptTypeListOk(s, exceptTypeList),
    true.


  exceptTypeOk : scope * ExceptionType
  exceptTypeListOk maps exceptTypeOk(*, list(*))
  
  exceptTypeOk(s, ClassType2ExceptionType(clsType)) :-
    clsTypeOk(s, clsType),
    true.


  mthdModOk : scope * MethodModifier
  mthdModListOk maps mthdModOk(*, list(*))

  mthdModOk(s, Annotation2MethodModifier(anno)) :-
    annoOk(s, anno),
    true.
  mthdModOk(s, Public2MethodModifier(_)) :- true.
  mthdModOk(s, Protected2MethodModifier(_)) :- true.
  mthdModOk(s, Private2MethodModifier(_)) :- true.
  mthdModOk(s, Abstract2MethodModifier(_)) :- true.
  mthdModOk(s, Static2MethodModifier(_)) :- true.
  mthdModOk(s, Final2MethodModifier(_)) :- true.
  mthdModOk(s, Synchronized2MethodModifier(_)) :- true.
  mthdModOk(s, Native2MethodModifier(_)) :- true.
  mthdModOk(s, Strictfp2MethodModifier(_)) :- true.


  mthdBodyOk : scope * MethodBody
  
  mthdBodyOk(s, Block2MethodBody(blk)) :-
    blkOk(s, blk),
    true.

  mthdBodyOk(s, NoMethodBody()) :-
    true.


  recvParamOk : scope * ReceiverParam
  
  recvParamOk(s, ReceiverParamQual(annoList, unannType, id)) :-
    annoListOk(s, annoList),
    unannTypeOk(s, unannType),
    true.

  recvParamOk(s, ReceiverParam(annoList, unannType)) :-
    annoListOk(s, annoList),
    unannTypeOk(s, unannType),
    true.


  formalParamsOk : scope * FormalParams
  
  formalParamsOk(s, NoParams()) :-
    true.

  formalParamsOk(s, ReceiverParam2FormalParams(recvParam)) :-
    recvParamOk(s, recvParam),
    true.

  formalParamsOk(s, SingleParam(lastFormalParam)) :-
    lastFormalParamOk(s, lastFormalParam),
    true.

  formalParamsOk(s, ParamList(formalParamList, lastFormalParam)) :-
    formalParamListOk(s, formalParamList),
    lastFormalParamOk(s, lastFormalParam),
    true.

  formalParamsOk(s, ReceiverParamList(recvParam, formalParamList, lastFormalParam)) :-
    recvParamOk(s, recvParam),
    formalParamListOk(s, formalParamList),
    lastFormalParamOk(s, lastFormalParam),
    true.


  lastFormalParamOk : scope * LastFormalParam
  
  lastFormalParamOk(s, FormalParam2LastFormalParam(formalParam)) :-
    formalParamOk(s, formalParam),
    true.
    
  lastFormalParamOk(s, VarArityParam(varModList, unannType, annoList, varDeclId)) :-
    varModListOk(s, varModList),
    unannTypeOk(s, unannType),
    annoListOk(s, annoList),
    varDeclIdOk(s, varDeclId),
    true.


  formalParamOk : scope * FormalParam
  formalParamListOk maps formalParamOk(*, list(*))
  
  formalParamOk(s, FormalParam(varModList, unannType, varDeclId)) :-
    varModListOk(s, varModList),
    unannTypeOk(s, unannType),
    varDeclIdOk(s, varDeclId),
    true.


  varModOk : scope * VariableModifier
  varModListOk maps varModOk(*, list(*))
  
  varModOk(s, Annotation2VariableModifier(anno)) :-
    annoOk(s, anno),
    true.
  varModOk(s, Final2VariableModifier(_)) :- true.

