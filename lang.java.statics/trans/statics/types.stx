module statics/types

imports

  signatures/java/types/Main-sig


rules // Chapter 4. Types, Values, and Variables

  typeOk : Type
  
  typeOk(PrimitiveType2Type(primType)) :-
    try { false } | note "unimplemented" @primType
  , true.

  typeOk(ReferenceType2Type(refType)) :-
    try { false } | note "unimplemented" @refType
  , true.


rules // 4.2. Primitive Types and Values

  primTypeOk : PrimitiveType
  
  primTypeOk(NumericType(annos, numType)) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @numType
  , true.

  primTypeOk(BooleanType(annos)) :-
    try { false } | note "unimplemented" @annos
  , true.


  numTypeOk : NumericType

  numTypeOk(Byte()) :- false.
  numTypeOk(Short()) :- false.
  numTypeOk(Int()) :- false.
  numTypeOk(Long()) :- false.
  numTypeOk(Char()) :- false.
  numTypeOk(Float()) :- false.
  numTypeOk(Double()) :- false.


rules // 4.3. Reference Types and Values

  refTypeOk : ReferenceType
  
  refTypeOk(ClassType2ReferenceType(clsType)) :-
    try { false } | note "unimplemented" @clsType
  , true.
    
  refTypeOk(ArrayType2ReferenceType(arrayType)) :-
    try { false } | note "unimplemented" @arrayType
  , true.


  clsTypeOk : ClassType
  
  clsTypeOk(ClassType(annos, id, typeArgs')) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @id
  , try { false } | note "unimplemented" @typeArgs'
  , true.

  clsTypeOk(ClassOrInterfaceTypeMember(clsType, annos, id, typeArgs')) :-
    try { false } | note "unimplemented" @clsType
  , try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @id
  , try { false } | note "unimplemented" @typeArgs'
  , true.


  typeVarOk : TypeVariable
  
  typeVarOk(TypeVar(annos, id)) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @id
  , true.


  arrayTypeOk : ArrayType
  
  arrayTypeOk(ArrayTypePrimitive(primType, annDims)) :-
    try { false } | note "unimplemented" @primType
  , try { false } | note "unimplemented" @annDims
  , true.

  arrayTypeOk(ArrayTypeClassType(clsType, annDims)) :-
    try { false } | note "unimplemented" @clsType
  , try { false } | note "unimplemented" @annDims
  , true.


  annDimsOk : AnnotatedDims
  
  annDimsOk(AnnotatedDims2AnnotatedDims(annDims)) :-
    try { false } | note "unimplemented" @annDims
  , true.


  annDimsEmptyOk : AnnotatedDimsEmpty
  
  annDimsEmptyOk(AnnotatedDims2AnnotatedDimsEmpty(annDims)) :-
    try { false } | note "unimplemented" @annDims
  , true.


  annDimOk : AnnotatedDim
  
  annDimOk(AnnotateDim(annos)) :-
    try { false } | note "unimplemented" @annos
  , true.


rules // 4.4. Type Variables

  typeParamOk : TypeParameter

  typeParamOk(TypeParameter(annos, id)) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @id
  , true.
    
  typeParamOk(TypeParameterExtends(annos, id, clsTypes)) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @id
  , try { false } | note "unimplemented" @clsTypes
  , true.
    
    
rules // 4.5. Parameterized Types

  typeArgsOk : TypeArguments
  
  typeArgsOk(TypeArguments(typeArgs)) :-
    try { false } | note "unimplemented" @typeArgs
  , true.
    

  typeArgOk : TypeArgument
  
  typeArgOk(ReferenceType2TypeArgument(refType)) :-
    try { false } | note "unimplemented" @refType
  , true.
    
  typeArgOk(WildCard2TypeArgument(wildCard)) :-
    try { false } | note "unimplemented" @wildCard
  , true.
    
  
  wildCardOk : WildCard
  
  wildCardOk(WildCard(annos)) :-
    try { false } | note "unimplemented" @annos
  , true.
    
  wildCardOk(WildCardExtends(annos, refType)) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @refType
  , true.
    
  wildCardOk(WildCardSuper(annos, refType)) :-
    try { false } | note "unimplemented" @annos
  , try { false } | note "unimplemented" @refType
  , true.
    